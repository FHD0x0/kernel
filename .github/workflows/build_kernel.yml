name: Build Android Kernel

on:
  push:
    branches:
      - main  # أو يمكنك تحديد أي فرع ترغب في مراقبته، مثل master أو develop.
  workflow_dispatch:  # يتيح لك تشغيل الـ workflow يدويًا عبر واجهة GitHub.

jobs:
  build:
    runs-on: ubuntu-latest  # اختيار بيئة العمل المناسبة (Ubuntu هنا)

    steps:
      # 1. تحميل الكود المصدر للكيرنل من مستودعك
      - name: Checkout kernel source
        uses: actions/checkout@v2

      # 2. تحميل AnyKernel3 (اختياري، لكنه مهم إذا كنت تستخدم قالب AnyKernel3 لإنشاء ملف مضغوط قابل للتثبيت)
      - name: Checkout AnyKernel3 template
        uses: actions/checkout@v2
        with:
          repository: lemniskett/AnyKernel3
          path: zipper

      # 3. بناء الكيرنل
      - name: Android kernel build
        uses: lemniskett/android-kernel-actions@master  # استخدم الإجراء الخاص بالكيرنل
        id: build
        env:
          NAME: Dark-Ages-Último  # يمكنك تخصيص اسم البناء
        with:
          arch: arm64  # تحديد المعمارية (arm64 هنا)
          compiler: gcc/10  # تحديد الأداة التي تستخدمها (GCC 10 هنا)
          defconfig: vince_defconfig  # تأكد من أن هذا يتوافق مع إعدادات الكيرنل الخاص بك
          image: Image.gz-dtb  # تحديد ملف الصورة النهائي الناتج عن عملية البناء

      # 4. نشر البناء
      - name: Release build
        uses: ncipollo/release-action@v1  # استخدام الإجراء لنشر الملف الناتج
        with:
          artifacts: ${{ steps.build.outputs.outfile }}
          token: ${{ secrets.GITHUB_TOKEN }}  # استخدم الـ GitHub Token للمصادقة

